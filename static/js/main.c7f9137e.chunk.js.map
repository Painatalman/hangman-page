{"version":3,"sources":["components/HangmanPage/page-head.png","components/InvisibleButNavigable.js","components/HangmanPage/HangmanPage.js","components/HangmanPage/index.js","features/profile/profileSlice.js","features/profile/hooks.js","features/game/utils/getLowerNoAccentWord.js","features/game/utils/getWordWithSpaces.js","features/game/utils/getWrongLetters.js","features/game/components/GameAside.js","features/language/options.js","features/language/languageSlice.js","features/language/LanguageSelector.js","features/game/options.js","features/game/gameSlice.js","features/game/components/GameHeadField.js","features/game/components/GameControl.js","features/game/components/GameLetterKeyboardButton.js","features/game/components/GameLetterKeyboard.js","features/game/components/AlreadyPlayedLetterMessage.js","features/game/components/ErrorMessage.js","features/game/components/IdleMessage.js","features/game/components/LoadingMessage.js","features/game/components/SolutionMessage.js","features/game/components/LostMessage.js","features/game/components/PlayLetterMessage.js","features/game/components/RightLetterMessage.js","features/game/components/WonMessage.js","features/game/components/WrongLetterMessage.js","features/game/components/GameMessage.js","features/game/components/GameTitle.js","features/game/components/GameScreen.js","features/game/Game.js","features/game/utils/isLetter.js","App.js","features/game/utils/hasLost.js","features/game/utils/hasWon.js","services/OfflineWordServiceEN.js","services/OfflineWordServicePT.js","services/WordServiceEN.js","services/WordService.js","services/WordServicePT.js","app/sagas.js","app/store.js","i18nConfig.js","index.js"],"names":["module","exports","Component","styled","Doll","figure","DollCaption","InvisibleButNavigable","figcaption","Head","img","nErrors","Torso","div","Limb","LeftArm","RightArm","LeftLeg","RightLeg","HangmanPage","headSrc","chancesLeft","useMemo","src","hangmanPageHead","alt","Trans","i18nKey","defaultProps","profileSlice","createSlice","name","initialState","reducers","setHeadSrc","state","action","payload","actions","selectHeadSrc","useYourHead","dispatch","useDispatch","useSelector","value","word","toLowerCase","replace","playedLetters","solution","reduce","acc","char","noAccentChar","getLowerNoAccentWord","match","includes","solutionWithoutAccents","errors","letter","Wrapper","aside","GameAside","t","useTranslation","href","target","rel","LANGUAGES","en","pt","language","languageSlice","setLanguage","selectLanguage","Label","label","currentLang","defaultValue","onChange","Object","keys","map","langCode","key","GAME_STATUS","error","lastLetterPlayed","hasPlayedNewLetter","status","gameSlice","start","startAfterFetch","setGameError","playLetter","Set","sort","join","win","lose","setMessage","selectPlayedLetters","selectSolution","selectStatus","selectLastPlayedLetter","selectHasPlayedNewLetter","selectError","GameHeadField","type","e","GameControlTitle","h2","section","Reset","button","GameControl","onClick","LanguageSelector","AlreadyPlayedWrapper","GameLetterKeyboardButton","Letter","Ol","ol","letters","split","GameLetterKeyboard","AlreadyPlayedLetterMessage","ErrorMessage","message","LoadingMessage","SolutionMessage","LostMessage","Message","span","RightLetterMessage","toUpperCase","WonMessage","WrongLetterMessage","IDLE","LOADING","LOST","WON","GameMessageWrapper","GameMessage","lastPlayedLetter","gameStatus","renderPlayingLetterStatus","PlayingMessage","IdleMessage","PlayLetterMessage","role","Title","h1","MainTitle","i","Subtitle","lang","SolutionWrapper","GameScreenWrapper","article","GameScreen","wrongLetters","getWrongLetters","wordWithSpaces","getWordWithSpaces","GameTitle","length","useEffect","handleKeyDown","ctrlKey","metaKey","str","letterCandidate","document","addEventListener","removeEventListener","App","Game","words","nWords","OfflineWordServiceEN","index","Math","floor","random","OfflineWordServicePT","WordService","axios","get","data","Error","langServices","WordServiceEN","offlineLangServices","services","window","navigator","onLine","getServiceFromLang","getWord","fetchWord","startAfterSetLanguage","setLanguageOnRehydrate","checkGameEnd","gameSaga","select","call","put","i18n","changeLanguage","hasWon","hasLost","all","takeEvery","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","game","gameReducer","languageReducer","profile","profileReducer","persistConfig","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","run","appSaga","persistor","persistStore","use","initReactI18next","init","resources","translation","alreadyPlayedLetterMessage","nrErrorsFigCaption","revealSolution","rightLetterMessage","hangmanPageAside","hangmanPageAsideLink","wrongLetterMessage","lng","nsSeparator","keySeparator","interpolation","escapeValue","i18nConfig","ReactDOM","render","StrictMode","loading","getElementById"],"mappings":"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","file":"static/js/main.c7f9137e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/page-head.1cc90bfe.png\";","import styled from 'styled-components';\n\nexport default Component => styled(Component)`\n  clip: rect(1px, 1px, 1px, 1px);\n  clip-path: inset(50%);\n  height: 1px;\n  width: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n`;\n","import React, { useMemo } from 'react';\nimport { Trans } from 'react-i18next';\n\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\n\nimport InvisibleButNavigable from '../InvisibleButNavigable';\nimport hangmanPageHead from './page-head.png';\n\nconst bodyColor = 'black';\nconst opacityTransition = 'opacity 250ms ease-in-out';\n\nconst Doll = styled.figure`\n  width: 120px;\n  padding-bottom: 35px;\n  position: relative;\n  margin: auto;\n`;\n\nconst DollCaption = InvisibleButNavigable(styled.figcaption``);\n\nconst Head = styled.img`\n  width: 50%;\n  display: block;\n  margin: auto;\n  opacity: ${({ nErrors }) => (nErrors > 0 ? '1' : '0')};\n  transition: ${opacityTransition};\n`;\n\nconst Torso = styled.div`\n  width: 5px;\n  border-radius: 5px;\n  margin: 5px auto;\n  height: 90px;\n  background: ${bodyColor};\n  opacity: ${({ nErrors }) => (nErrors > 1 ? '1' : '0')};\n  transition: ${opacityTransition};\n`;\n\nconst Limb = styled.div`\n  width: 5px;\n  border-radius: 5px;\n  height: 30px;\n  background: ${bodyColor};\n  position: absolute;\n  transition: ${opacityTransition};\n`;\n\nconst LeftArm = styled(Limb)`\n  transform: rotate(30deg);\n  top: 85px;\n  left: 35px;\n  opacity: ${({ nErrors }) => (nErrors > 2 ? '1' : '0')};\n`;\n\nconst RightArm = styled(Limb)`\n  transform: rotate(-30deg);\n  top: 85px;\n  right: 35px;\n  opacity: ${({ nErrors }) => (nErrors > 3 ? '1' : '0')};\n`;\n\nconst LeftLeg = styled(Limb)`\n  transform: rotate(20deg);\n  top: 155px;\n  left: 45px;\n  opacity: ${({ nErrors }) => (nErrors > 4 ? '1' : '0')};\n`;\n\nconst RightLeg = styled(Limb)`\n  transform: rotate(-20deg);\n  top: 155px;\n  right: 45px;\n  opacity: ${({ nErrors }) => (nErrors > 5 ? '1' : '0')};\n`;\n\nfunction HangmanPage({ nErrors, headSrc }) {\n  const chancesLeft = useMemo(() => 6 - nErrors, [nErrors]);\n\n  return (\n    <Doll>\n      <Head nErrors={nErrors} src={headSrc || hangmanPageHead} alt=\"\" />\n      <Torso nErrors={nErrors} />\n      <LeftArm nErrors={nErrors} />\n      <RightArm nErrors={nErrors} />\n      <LeftLeg nErrors={nErrors} />\n      <RightLeg nErrors={nErrors} />\n      <DollCaption>\n        <Trans i18nKey=\"nrErrorsFigCaption\">\n          Chances left: {{ chancesLeft }}\n        </Trans>\n      </DollCaption>\n    </Doll>\n  );\n}\n\nHangmanPage.propTypes = {\n  nErrors: PropTypes.number,\n  headSrc: PropTypes.string,\n};\n\nHangmanPage.defaultProps = {\n  nErrors: 0,\n  headSrc: hangmanPageHead,\n};\n\nexport default HangmanPage;\n","import HangmanPage from './HangmanPage';\n\nexport default HangmanPage;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  headSrc: '',\n};\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    setHeadSrc: (state, action) => {\n      state.headSrc = action.payload;\n    },\n  },\n});\n\nexport const { setHeadSrc } = profileSlice.actions;\n\nexport const selectHeadSrc = state => {\n  return state[profileSlice.name].headSrc;\n};\n\nexport default profileSlice.reducer;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { selectHeadSrc, setHeadSrc } from './profileSlice';\n\nexport const useYourHead = () => {\n  const dispatch = useDispatch();\n  const headSrc = useSelector(selectHeadSrc);\n  const dispatchHeadSrc = value => dispatch(setHeadSrc(value));\n\n  return [headSrc, dispatchHeadSrc];\n};\n","/**\n * Get a version of a word with no accents or uppercase letters.\n *\n * @example getLowerNoAccentWord(\"roda\") // \"roda\"\n * @example getLowerNoAccentWord(\"Éder\") // \"eder\"\n * @example getLowerNoAccentWord(\"Extremo\") // \"extremo\"\n * @example getLowerNoAccentWord(\"êxodo\") // \"exodo\"\n * @example getLowerNoAccentWord(\"bárbara\") // \"barbara\"\n * @example getLowerNoAccentWord(\"órgãos\") // \"orgaos\"\n * @example getLowerNoAccentWord(\"à\") // \"a\"\n * @example getLowerNoAccentWord(\"perseverança\") // \"perseveranca\"\n * @example getLowerNoAccentWord(\"ídolo\") // \"idolo\"\n * @example getLowerNoAccentWord(\"miúda\") // \"miuda\"\n * @example getLowerNoAccentWord(\"lápis-lazúli\") // \"lapis-lazuli\"\n */\nexport default word => {\n  return word\n    .toLowerCase()\n    .replace(/é|ê/g, 'e')\n    .replace(/í/g, 'i')\n    .replace(/ú/g, 'u')\n    .replace(/ó|õ|ô/g, 'o')\n    .replace(/á|à|ã/g, 'a')\n    .replace(/ç/g, 'c');\n};\n","import getLowerNoAccentWord from './getLowerNoAccentWord';\n\nexport default (playedLetters, solution) =>\n  [...solution].reduce((acc, char) => {\n    const noAccentChar = getLowerNoAccentWord(char);\n    const isLetter = noAccentChar.match(/[A-Z|a-z]/i);\n\n    if (!isLetter) {\n      return acc + char;\n    }\n\n    const wasPlayed = playedLetters.includes(noAccentChar);\n\n    acc += wasPlayed ? char : '_';\n    return acc;\n  }, '');\n","import getLowerNoAccentWord from './getLowerNoAccentWord';\n\nexport default (playedLetters, solution) => {\n  const solutionWithoutAccents = getLowerNoAccentWord(solution);\n\n  return [...playedLetters].reduce((errors, letter) => {\n    if (!solutionWithoutAccents.includes(letter)) {\n      errors += letter;\n    }\n\n    return errors;\n  }, '');\n};\n","import React from 'react';\nimport { useTranslation, Trans } from 'react-i18next';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.aside`\n  position: absolute;\n  right: 0;\n  color: gray;\n  top: 8rem;\n  transform: rotate(-20deg);\n  width: 8rem;\n  text-align: center;\n  text-decoration: underline;\n  font-family: 'Architects Daughter';\n`;\n\nfunction GameAside() {\n  const { t } = useTranslation();\n  return (\n    <Wrapper>\n      <a\n        href={t('hangmanPageAsideLink')}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Trans i18nKey=\"hangmanPageAside\">\n          Who is <br />\n          Hangman Page?\n        </Trans>\n      </a>\n    </Wrapper>\n  );\n}\n\nexport default GameAside;\n","export const LANGUAGES = {\n  en: 'english',\n  pt: 'português',\n};\n\nexport const DEFAULT_LANGUAGE = 'en';\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { DEFAULT_LANGUAGE } from './options';\n\nconst initialState = {\n  language: DEFAULT_LANGUAGE,\n};\n\nexport const languageSlice = createSlice({\n  name: 'language',\n  initialState,\n  reducers: {\n    setLanguage: (state, action) => {\n      state.language = action.payload;\n    },\n  },\n});\n\nexport const { setLanguage } = languageSlice.actions;\n\nexport const selectLanguage = state => {\n  return state[languageSlice.name].language;\n};\n\nexport default languageSlice.reducer;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport styled from 'styled-components';\n\nimport { selectLanguage, setLanguage } from './languageSlice';\nimport { LANGUAGES } from './options';\n\nconst Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  select {\n    appearance: none;\n  }\n`;\n\nexport default () => {\n  const dispatch = useDispatch();\n  const currentLang = useSelector(selectLanguage);\n  const { t } = useTranslation();\n\n  return (\n    <Label>\n      {t('Change language:')}\n      <select\n        defaultValue={currentLang}\n        onChange={({ target }) => dispatch(setLanguage(target.value))}\n      >\n        {Object.keys(LANGUAGES).map(langCode => (\n          <option key={langCode} value={langCode}>\n            {LANGUAGES[langCode]}\n          </option>\n        ))}\n      </select>\n    </Label>\n  );\n};\n","export const GAME_STATUS = {\n  // can start game, not ready yet. Cannot play letters\n  IDLE: 'idle',\n  // can play letters\n  PLAYING: 'playing',\n  // fetching content, playing animation. No interaction\n  LOADING: 'loading',\n  // like IDLE, but counts as victory\n  WON: 'won',\n  // like IDLE, but counts as loss\n  LOST: 'lost',\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { GAME_STATUS } from './options';\n\nconst initialState = {\n  playedLetters: '',\n  solution: '',\n  error: null,\n  lastLetterPlayed: null,\n  hasPlayedNewLetter: false,\n  status: GAME_STATUS.IDLE,\n};\n\nexport const gameSlice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    start: state => {\n      state.playedLetters = '';\n      state.solution = '';\n      state.error = null;\n      state.status = GAME_STATUS.LOADING;\n      state.lastLetterPlayed = initialState.lastLetterPlayed;\n      state.hasPlayedNewLetter = false;\n    },\n    startAfterFetch: (state, action) => {\n      state.solution = action.payload;\n      state.status = GAME_STATUS.PLAYING;\n    },\n    setGameError: (state, action) => {\n      state.error = action.payload;\n      state.status = GAME_STATUS.IDLE;\n    },\n    playLetter: (state, { payload: letter }) => {\n      const { playedLetters } = state;\n\n      state.lastLetterPlayed = letter;\n      state.hasPlayedNewLetter = !playedLetters.includes(letter);\n      state.playedLetters = [...new Set(`${playedLetters}${letter}`)]\n        .sort()\n        .join('');\n    },\n    win: state => {\n      state.status = GAME_STATUS.WON;\n    },\n    lose: state => {\n      state.status = GAME_STATUS.LOST;\n    },\n  },\n});\n\nexport const {\n  start,\n  startAfterFetch,\n  playLetter,\n  setGameError,\n  setMessage,\n  win,\n  lose,\n} = gameSlice.actions;\n\n// `useSelector((state) => state.counter.value)`\nexport const selectPlayedLetters = state => {\n  return state[gameSlice.name].playedLetters;\n};\nexport const selectSolution = state => {\n  return state[gameSlice.name].solution;\n};\nexport const selectStatus = state => {\n  return state[gameSlice.name].status;\n};\nexport const selectLastPlayedLetter = state => {\n  return state[gameSlice.name].lastLetterPlayed;\n};\nexport const selectHasPlayedNewLetter = state => {\n  return state[gameSlice.name].hasPlayedNewLetter;\n};\nexport const selectError = state => {\n  return state[gameSlice.name].error;\n};\nexport default gameSlice.reducer;\n","import React from 'react';\n\nimport { useYourHead } from '~/features/profile/hooks';\n\nfunction GameHeadField() {\n  const [headSrc, setHeadSrc] = useYourHead();\n\n  return (\n    <label>\n      Head image URL\n      <input\n        type=\"text\"\n        value={headSrc}\n        onChange={e => setHeadSrc(e.target.value)}\n      />\n    </label>\n  );\n}\n\nexport default GameHeadField;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\n\nimport styled from 'styled-components';\n\nimport InvisibleButNavigable from '../../../components/InvisibleButNavigable';\nimport LanguageSelector from '../../language/LanguageSelector';\nimport { start } from '../gameSlice';\nimport GameHeadField from './GameHeadField';\n\nconst GameControlTitle = InvisibleButNavigable(styled.h2``);\nconst Wrapper = styled.section`\n  display: flex;\n  align-items: space-between;\n`;\n\nconst Reset = styled.button`\n  background: transparent;\n  font-size: 1.5rem;\n  text-decoration: underline;\n  cursor: pointer;\n  padding: 0.2rem 1rem;\n  border: none;\n  text-transform: uppercase;\n  font-family: inherit;\n`;\n\nfunction GameControl() {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  return (\n    <Wrapper>\n      <GameControlTitle>{t('Game Controls')}</GameControlTitle>\n      <Reset\n        type=\"button\"\n        onClick={() => {\n          dispatch(start());\n        }}\n      >\n        {t('Reset game')}\n      </Reset>\n      <div>\n        <LanguageSelector />\n        <GameHeadField />\n      </div>\n    </Wrapper>\n  );\n}\n\nexport default GameControl;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\n\nimport { selectPlayedLetters, playLetter, selectStatus } from '../gameSlice';\nimport { GAME_STATUS } from '../options';\n\nconst Wrapper = styled.button`\n  appearance: none;\n  border: none;\n  background: transparent;\n  text-transform: uppercase;\n  font-size: 1.5rem;\n  font-family: 'Architects Daughter', cursive;\n  padding: 1rem;\n  cursor: pointer;\n  text-decoration: underline;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  width: 100%;\n`;\nconst AlreadyPlayedWrapper = styled(Wrapper)`\n  text-decoration: line-through;\n  text-decoration-color: red;\n`;\n\nfunction GameLetterKeyboardButton({ letter }) {\n  const playedLetters = useSelector(selectPlayedLetters);\n  const status = useSelector(selectStatus);\n  const dispatch = useDispatch();\n\n  const Letter = playedLetters.includes(letter)\n    ? AlreadyPlayedWrapper\n    : Wrapper;\n\n  return (\n    <Letter\n      type=\"button\"\n      onClick={() => {\n        if (status !== GAME_STATUS.PLAYING) {\n          return;\n        }\n        dispatch(playLetter(letter));\n      }}\n    >\n      {letter}\n    </Letter>\n  );\n}\n\nGameLetterKeyboardButton.propTypes = {\n  letter: PropTypes.string.isRequired,\n};\n\nexport default GameLetterKeyboardButton;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nimport GameLetterKeyboardButton from './GameLetterKeyboardButton';\n\nconst Ol = styled.ol`\n  list-style-type: none;\n  padding: 0;\n  display: grid;\n  margin: 1rem auto;\n  grid-template-columns: repeat(9, minmax(1rem, 1fr));\n  text-align: center;\n  background-color: black;\n  grid-area: 1 / 1 / 2 / 3;\n`;\n\nconst letters = 'abcdefghijklmnopqrstuvwxyz'.split('');\n\nfunction GameLetterKeyboard() {\n  return (\n    <Ol>\n      {letters.map(letter => (\n        <li key={letter}>\n          <GameLetterKeyboardButton letter={letter} />\n        </li>\n      ))}\n    </Ol>\n  );\n}\n\nexport default GameLetterKeyboard;\n","import React from 'react';\nimport { Trans } from 'react-i18next';\n\nimport PropTypes from 'prop-types';\n\nconst AlreadyPlayedLetterMessage = ({ letter }) => {\n  return (\n    <Trans i18nKey=\"alreadyPlayedLetterMessage\">\n      <em>{{ letter }}</em> was already played.\n    </Trans>\n  );\n};\n\nAlreadyPlayedLetterMessage.propTypes = {\n  letter: PropTypes.string.isRequired,\n};\n\nexport default AlreadyPlayedLetterMessage;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport PropTypes from 'prop-types';\n\nconst ErrorMessage = ({ message }) => {\n  const { t } = useTranslation();\n  return (\n    <div>\n      {t('Error:')} {message}\n    </div>\n  );\n};\n\nErrorMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default ErrorMessage;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst LoadingMessage = () => {\n  const { t } = useTranslation();\n  return <span>{t(\"Press 'Reset Game' to start.\")}</span>;\n};\n\nexport default LoadingMessage;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst LoadingMessage = () => {\n  const { t } = useTranslation();\n\n  return <span>{t('Starting game, please wait')}</span>;\n};\n\nexport default LoadingMessage;\n","import React from 'react';\nimport { Trans } from 'react-i18next';\nimport { useSelector } from 'react-redux';\n\nimport { selectSolution } from '../gameSlice';\n\nconst SolutionMessage = () => {\n  const solution = useSelector(selectSolution);\n\n  return (\n    <Trans i18nKey=\"revealSolution\" solution={solution}>\n      The word was <strong>{{ solution }}</strong>\n    </Trans>\n  );\n};\n\nexport default SolutionMessage;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport SolutionMessage from './SolutionMessage';\n\nconst LostMessage = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      {t('You lose!')} <SolutionMessage />\n    </>\n  );\n};\n\nexport default LostMessage;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport styled from 'styled-components';\n\nconst Message = styled.span``;\n\nconst SolutionMessage = () => {\n  const { t } = useTranslation();\n\n  return <Message>{t('Type or select a letter')}</Message>;\n};\n\nexport default SolutionMessage;\n","import React from 'react';\nimport { Trans } from 'react-i18next';\n\nimport PropTypes from 'prop-types';\n\nconst RightLetterMessage = ({ letter }) => (\n  <Trans i18nKey=\"rightLetterMessage\" letter={letter.toUpperCase()}>\n    <em>{{ letter }}</em> is <strong>correct</strong>.\n  </Trans>\n);\n\nRightLetterMessage.propTypes = {\n  letter: PropTypes.string.isRequired,\n};\n\nexport default RightLetterMessage;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst WonMessage = () => {\n  const { t } = useTranslation();\n\n  return <strong>{t('You win!')}</strong>;\n};\n\nexport default WonMessage;\n","import React from 'react';\nimport { Trans } from 'react-i18next';\n\nimport PropTypes from 'prop-types';\n\nconst WrongLetterMessage = ({ letter }) => (\n  <Trans i18nKey=\"wrongLetterMessage\">\n    <em>{{ letter }}</em> is <strong>wrong</strong>\n  </Trans>\n);\n\nWrongLetterMessage.propTypes = {\n  letter: PropTypes.string.isRequired,\n};\n\nexport default WrongLetterMessage;\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport styled from 'styled-components';\n\nimport {\n  selectStatus,\n  selectSolution,\n  selectLastPlayedLetter,\n  selectHasPlayedNewLetter,\n  selectError,\n} from '../gameSlice';\nimport { GAME_STATUS } from '../options';\nimport AlreadyPlayedLetterMessage from './AlreadyPlayedLetterMessage';\n// eslint-disable-next-line import/extensions\nimport ErrorMessage from './ErrorMessage';\nimport IdleMessage from './IdleMessage';\nimport LoadingMessage from './LoadingMessage';\nimport LostMessage from './LostMessage';\nimport PlayLetterMessage from './PlayLetterMessage';\nimport RightLetterMessage from './RightLetterMessage';\nimport WonMessage from './WonMessage';\nimport WrongLetterMessage from './WrongLetterMessage';\n\nconst { IDLE, LOADING, LOST, WON } = GAME_STATUS;\n\nconst GameMessageWrapper = styled.div`\n  font-family: 'Architects Daughter', cursive;\n  margin: 1rem 0;\n  text-align: center;\n  em {\n    display: inline;\n    text-transform: uppercase;\n  }\n  strong {\n    display: inline;\n  }\n`;\n\nconst GameMessage = () => {\n  const solution = useSelector(selectSolution);\n  const lastPlayedLetter = useSelector(selectLastPlayedLetter);\n  const gameStatus = useSelector(selectStatus);\n  const hasPlayedNewLetter = useSelector(selectHasPlayedNewLetter);\n  const error = useSelector(selectError);\n\n  const renderPlayingLetterStatus = useMemo(() => {\n    if (!lastPlayedLetter) {\n      return <></>;\n    }\n\n    if (!hasPlayedNewLetter) {\n      return <AlreadyPlayedLetterMessage letter={lastPlayedLetter} />;\n    }\n    if (solution.includes(lastPlayedLetter)) {\n      return <RightLetterMessage letter={lastPlayedLetter} />;\n    }\n    return <WrongLetterMessage letter={lastPlayedLetter} />;\n  }, [hasPlayedNewLetter, lastPlayedLetter, solution]);\n\n  function PlayingMessage() {\n    // not playing? Return matching component\n    if (gameStatus === WON) {\n      return <WonMessage />;\n    }\n    if (gameStatus === LOST) {\n      return <LostMessage solution={solution} />;\n    }\n    if (gameStatus === LOADING) {\n      return <LoadingMessage />;\n    }\n    if (gameStatus === IDLE) {\n      return <IdleMessage />;\n    }\n    if (!lastPlayedLetter) {\n      return <PlayLetterMessage />;\n    }\n\n    return (\n      <>\n        {renderPlayingLetterStatus} <br />\n        <PlayLetterMessage />\n      </>\n    );\n  }\n\n  return (\n    <GameMessageWrapper role=\"alert\">\n      {error ? <ErrorMessage message={error} /> : ''}\n      <PlayingMessage />\n    </GameMessageWrapper>\n  );\n};\n\nexport default GameMessage;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport styled from 'styled-components';\n\nconst Title = styled.h1`\n  font-family: 'Architects Daughter', cursive;\n  text-transform: none;\n  text-align: center;\n  font-size: 1rem;\n  line-height: 1;\n`;\n\nconst MainTitle = styled.i`\n  text-transform: uppercase;\n  font-size: 1.5rem;\n  font-style: normal;\n`;\n\nconst Subtitle = styled.span`\n  display: inline-block;\n  margin-left: 1rem;\n`;\n\nexport default () => {\n  const { t } = useTranslation();\n\n  return (\n    <Title>\n      <MainTitle lang=\"en\">Hangman (Page)</MainTitle>\n      <Subtitle>{t('The Game')}</Subtitle>\n    </Title>\n  );\n};\n","import React, { useMemo } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\n\nimport HangmanPage from '~/components/HangmanPage';\nimport { useYourHead } from '~/features/profile/hooks';\n\nimport getWordWithSpaces from '../utils/getWordWithSpaces';\nimport getWrongLetters from '../utils/getWrongLetters';\nimport GameAside from './GameAside';\nimport GameControl from './GameControl';\nimport GameLetterKeyboard from './GameLetterKeyboard';\nimport GameMessage from './GameMessage';\nimport GameTitle from './GameTitle';\n\nconst SolutionWrapper = styled.div`\n  letter-spacing: 0.5rem;\n  font-family: 'Architects Daughter', cursive;\n  text-transform: uppercase;\n  font-size: 2.25rem;\n  text-align: center;\n  font-weight: bold;\n`;\n\nconst GameScreenWrapper = styled.article`\n  position: relative;\n  max-width: 560px;\n  width: 100%;\n  margin: 1rem auto;\n  font-family: 'Architects Daughter', cursive;\n`;\n\nconst GameScreen = ({ playedLetters, solution }) => {\n  const wrongLetters = useMemo(() => getWrongLetters(playedLetters, solution), [\n    playedLetters,\n    solution,\n  ]);\n  const [headSrc] = useYourHead();\n\n  const wordWithSpaces = useMemo(\n    () => getWordWithSpaces(playedLetters, solution),\n    [solution, playedLetters]\n  );\n\n  return (\n    <GameScreenWrapper>\n      <header>\n        <GameTitle />\n      </header>\n      <GameAside />\n      <main>\n        <GameMessage />\n        <HangmanPage nErrors={wrongLetters.length} headSrc={headSrc} />\n        <SolutionWrapper>{wordWithSpaces}</SolutionWrapper>\n        <GameLetterKeyboard />\n      </main>\n      <GameControl />\n    </GameScreenWrapper>\n  );\n};\n\nGameScreen.propTypes = {\n  playedLetters: PropTypes.string.isRequired,\n  solution: PropTypes.string.isRequired,\n};\n\nexport default GameScreen;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport GameScreen from './components/GameScreen';\nimport {\n  playLetter,\n  selectSolution,\n  selectPlayedLetters,\n  selectStatus,\n} from './gameSlice';\nimport { GAME_STATUS } from './options';\nimport isLetter from './utils/isLetter';\n\nexport default () => {\n  const solution = useSelector(selectSolution);\n  const playedLetters = useSelector(selectPlayedLetters);\n\n  const dispatch = useDispatch();\n  const status = useSelector(selectStatus);\n\n  useEffect(() => {\n    const handleKeyDown = ({ key, ctrlKey, metaKey }) => {\n      // CTRL+T and CMD+T don't count!\n      if (metaKey || ctrlKey || status !== GAME_STATUS.PLAYING) {\n        return;\n      }\n\n      const letterCandidate = key.toLowerCase();\n\n      // eslint-disable-next-line no-unused-expressions\n      isLetter(letterCandidate) && dispatch(playLetter(letterCandidate));\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [dispatch, status]);\n\n  return <GameScreen solution={solution} playedLetters={playedLetters} />;\n};\n","export default str => str.length === 1 && str.match(/[a-zA-Z]/i);\n","import React from 'react';\n\nimport Game from './features/game/Game';\n\nexport default function App() {\n  return <Game />;\n}\n","import getWrongLetters from './getWrongLetters';\n\nexport default (playedLetters, solution) => {\n  const wrongLetters = getWrongLetters(playedLetters, solution);\n\n  return wrongLetters.length > 5;\n};\n","import getWordWithSpaces from './getWordWithSpaces';\n\nexport default (playedLetters, solution) => {\n  return !getWordWithSpaces(playedLetters, solution).includes('_');\n};\n","const words = [\n  'acrobat',\n  'baby',\n  'blouse',\n  'dishonestly',\n  'excrement',\n  'glass',\n  'hairdresser',\n  'ladybug',\n  'mistress',\n  'nocturne',\n  'pacifier',\n  'smurf',\n  'swindler',\n  'youngster',\n  'zombify',\n];\n\nconst nWords = words.length;\n\nexport default class OfflineWordServiceEN {\n  static async getWord() {\n    const index = Math.floor(Math.random() * nWords);\n\n    return words[index];\n  }\n}\n","const words = [\n  'acrobata',\n  'bebé',\n  'biberão',\n  'bosta',\n  'cabeleireira',\n  'camisa',\n  'copo',\n  'despassarado',\n  'jovem',\n  'passarinho',\n  'patinagem',\n  'pelintra',\n  'veneno',\n  'vómito',\n  'zumbido',\n];\n\nconst nWords = words.length;\n\nexport default class OfflineWordServicePT {\n  static async getWord() {\n    const index = Math.floor(Math.random * nWords);\n\n    return words[index];\n  }\n}\n","import axios from 'axios';\n\nexport default class WordService {\n  static async getWord() {\n    try {\n      const word = await axios.get(\n        'https://random-word-api.herokuapp.com/word'\n      );\n      return word.data[0];\n    } catch (e) {\n      throw new Error(`Unable to get EN word: ${e.message}`);\n    }\n  }\n}\n","import OfflineWordServiceEN from './OfflineWordServiceEN';\nimport OfflineWordServicePT from './OfflineWordServicePT';\nimport WordServiceEN from './WordServiceEN';\nimport WordServicePT from './WordServicePT';\n\nconst langServices = {\n  pt: WordServicePT,\n  en: WordServiceEN,\n};\n\nconst offlineLangServices = {\n  pt: OfflineWordServicePT,\n  en: OfflineWordServiceEN,\n};\n\nexport default class WordService {\n  static getServiceFromLang(lang = 'en') {\n    const services = window.navigator.onLine\n      ? langServices\n      : offlineLangServices;\n\n    return services[lang];\n  }\n\n  static async getWord(lang) {\n    try {\n      return await WordService.getServiceFromLang(lang).getWord();\n    } catch (e) {\n      return offlineLangServices[lang].getWord();\n    }\n  }\n}\n","import axios from 'axios';\n\nexport default class WordService {\n  static async getWord() {\n    try {\n      const {\n        data: { word },\n      } = await axios.get('https://api.dicionario-aberto.net/random');\n      return word;\n    } catch ({ message }) {\n      throw new Error(`\n        Unable to get EN word:\n        -> ${message}\n      `);\n    }\n  }\n}\n","import i18n from 'i18next';\nimport { call, put, takeEvery, all, select } from 'redux-saga/effects';\n\nimport {\n  startAfterFetch,\n  start,\n  win,\n  lose,\n  setGameError,\n  playLetter,\n  selectSolution,\n  selectPlayedLetters,\n} from '../features/game/gameSlice';\nimport hasLost from '../features/game/utils/hasLost';\nimport hasWon from '../features/game/utils/hasWon';\nimport {\n  setLanguage,\n  selectLanguage,\n} from '../features/language/languageSlice';\nimport WordService from '../services/WordService';\n\nfunction* fetchWord() {\n  let word;\n\n  const language = yield select(selectLanguage);\n\n  try {\n    word = yield call(WordService.getWord, language);\n    yield put(startAfterFetch(word));\n  } catch (e) {\n    yield put(setGameError(e.message));\n  }\n}\n\nfunction* startAfterSetLanguage() {\n  const language = yield select(selectLanguage);\n\n  yield call(() => i18n.changeLanguage(language));\n  yield put(start());\n}\n\nfunction* setLanguageOnRehydrate() {\n  const language = yield select(selectLanguage);\n\n  yield call(() => i18n.changeLanguage(language));\n}\n\nfunction* checkGameEnd() {\n  const playedLetters = yield select(selectPlayedLetters);\n  const solution = yield select(selectSolution);\n\n  if (hasWon(playedLetters, solution)) {\n    yield put(win());\n  } else if (hasLost(playedLetters, solution)) {\n    yield put(lose());\n  }\n}\n\nexport default function* gameSaga() {\n  yield all([\n    takeEvery(start().type, fetchWord),\n    takeEvery(setLanguage().type, startAfterSetLanguage),\n    takeEvery(playLetter().type, checkGameEnd),\n    takeEvery('persist/REHYDRATE', setLanguageOnRehydrate),\n  ]);\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport createSagaMiddleware from 'redux-saga';\n\nimport gameReducer from '../features/game/gameSlice';\nimport languageReducer from '../features/language/languageSlice';\nimport profileReducer from '../features/profile/profileSlice';\nimport appSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst rootReducer = combineReducers({\n  game: gameReducer,\n  language: languageReducer,\n  profile: profileReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE'],\n      },\n    }),\n    sagaMiddleware,\n  ],\n});\n\nsagaMiddleware.run(appSaga);\n\nexport default store;\nexport const persistor = persistStore(store);\n","import { initReactI18next } from 'react-i18next';\n\nimport i18n from 'i18next';\n\n// the translations\n// (tip move them in a JSON file and import them)\nconst resources = {\n  pt: {\n    translation: {\n      alreadyPlayedLetterMessage: 'Letra <0>{{ letter }}</0> já foi jogada.',\n      'Change language:': 'Mudar língua:',\n      'Game controls': 'Comandos de jogo',\n      nrErrorsFigCaption: 'Tentativas: {{ chancesLeft }}',\n      \"Press 'Reset Game' to start.\": \"Carregue 'Reiniciar' para começar.\",\n      'Reset game': 'Recomeçar',\n      revealSolution: 'A palavra era <1>{{ solution }}</1>.',\n      rightLetterMessage: '<0>{{ letter }}</0> está <2>correto</2>.',\n      'Starting game, please wait': 'A começar o jogo. Aguarde, por favor',\n      'The Game': 'O Jogo',\n      'Try again?': 'Tentar de novo?',\n      'Type or select a letter': 'Tecle ou carregue numa letra',\n      hangmanPageAside: 'Quem é <1 />Hangman Page?',\n      hangmanPageAsideLink: 'https://pt.wikipedia.org/wiki/Adam_Page',\n      wrongLetterMessage: '<0>{{ letter }}</0> está <2>errado</2>.',\n      'You win!': 'Ganhaste!',\n      'You lose!': 'Perdeste!',\n    },\n  },\n  en: {\n    translation: {\n      hangmanPageAsideLink: 'https://en.wikipedia.org/wiki/Adam_Page',\n    },\n  },\n};\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: 'en',\n    // for colons\n    nsSeparator: false,\n    keySeparator: false, // we do not use keys in form messages.welcome\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { initReactI18next } from 'react-i18next';\nimport { Provider } from 'react-redux';\n\nimport i18n from 'i18next';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.css';\n\nimport App from './App';\nimport store, { persistor } from './app/store';\nimport i18nConfig from './i18nConfig';\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init(i18nConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}